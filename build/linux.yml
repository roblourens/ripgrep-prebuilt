parameters:
  target: ''
  gcc_version: ''
  rust_version: 'nightly'

steps:
- script: |
    set -ex

    REPO=$(node -p "require('./config.json').ripgrepRepo")
    TREEISH=$(node -p "require('./config.json').ripgrepTreeish")
    git clone https://github.com/${REPO}.git
    cd ripgrep
    git checkout $TREEISH
  displayName: Clone Ripgrep
# - script: build/install.sh
#   displayName: Install Rust
#   env:
#     RUST_VERSION: ${{ parameters.rust_version }}
#     TARGET: ${{ parameters.target }}
#     GCC_VERSION: ${{ parameters.gcc_version }}
# - script: ../build/script.sh
#   displayName: Build
#   workingDirectory: ripgrep
#   env:
#     TARGET: ${{ parameters.target }}
- script: |
    echo 'payload' > $OUT_DIR/$TARGET.txt
  env:
    OUT_DIR: $(Build.ArtifactStagingDirectory)
    TARGET: ${{ parameters.target }}
# - script: ../build/package.sh
#   displayName: Package
#   workingDirectory: ripgrep
#   env:
#     TARGET: ${{ parameters.target }}
#     OUT_DIR: $(Build.ArtifactStagingDirectory)
#   condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
- task: GitHubRelease@0
  inputs:
    gitHubConnection: GitHub
    repositoryName: '$(Build.Repository.Name)'
    action: 'edit'
    target: '$(Build.SourceVersion)'
    tagSource: 'auto'
    assets: '$(Build.ArtifactStagingDirectory)/*'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
