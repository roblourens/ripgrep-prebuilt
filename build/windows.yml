# Based on https://github.com/BurntSushi/ripgrep/blob/master/appveyor.yml

parameters:
  target: ''
  gcc_version: ''
  rust_version: 'nightly'

steps:
# - powershell: |
#     gci env:*
#     $REPO=node -p "require('./config.json').ripgrepRepo"
#     $TREEISH=node -p "require('./config.json').ripgrepTreeish"
#     git clone https://github.com/${REPO}.git
#     cd ripgrep
#     git checkout $TREEISH
# - powershell: |
#     echo $env:reason
#     echo $BUILD_SOURCEVERSION
#     Invoke-WebRequest https://win.rustup.rs -UseBasicParsing -OutFile rustup-init.exe
#     .\rustup-init.exe -y --default-host $env:TARGET
#     $env:PATH+=";C:\Users\appveyor\.cargo\bin"

#     rustup default $env:RUST_VERSION
#     rustc -V
#     cargo -V

#     rustup target add $env:TARGET
#   env:
#     RUST_VERSION: ${{ parameters.rust_version }}
#     TARGET: ${{ parameters.target }}
#     reason: variables['Build.Reason']
#   displayName: Install Rust
# - powershell: |
#     $env:RUSTFLAGS='-C target-feature=+crt-static -Z unstable-options'
#     cargo build --release --features pcre2

#     pushd ..
#     $this_tag=git tag -l --contains HEAD
#     popd

#     7z a ${env:OUT_DIR}\ripgrep-${this_tag}-${env:TARGET}.zip target\release\rg.exe
#   displayName: Build
#   workingDirectory: ripgrep
#   env:
#     TARGET: ${{ parameters.target }}
#     OUT_DIR: $(Build.ArtifactStagingDirectory)
#   condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
- script: |
    echo 'payload' > $OUT_DIR/$TARGET.txt
  env:
    OUT_DIR: $(Build.ArtifactStagingDirectory)
    TARGET: ${{ parameters.target }}
- task: GitHubRelease@0
  inputs:
    gitHubConnection: GitHub
    repositoryName: '$(Build.Repository.Name)'
    action: 'edit'
    target: '$(Build.SourceVersion)'
    tag: '$(Build.SourceBranchName)'
    tagSource: 'auto'
    assets: '$(Build.ArtifactStagingDirectory)/*'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
